name: Cli Publish

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
  #    - run: npm ci
  #    - run: npm test

  #   release:
  #     runs-on: ubuntu-latest
  #     needs: [build]
  #     steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npx semantic-release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  oclifRelease:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env: 
      MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
      MACOS_CERTIFICATE_PWD: ''
      OSX_KEYCHAIN:  ${{ secrets.OSX_KEYCHAIN_PASSWORD }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        include:
    #      - os: ubuntu-latest
    #        artifact_name: deb/twilio_2.27.1-1_amd64.deb
     #       asset_name: twilio.deb
      #      command_name: sudo oclif-dev pack:deb
     #       exec_name: ubuntu
     #     - os: macos-latest
    #        artifact_name: win/twilio-v2.27.1-x86.exe
    #        asset_name: twilio.exe
    #        command_name: oclif-dev pack:win
    #        exec_name: windows
          - os: macos-latest
            artifact_name: macos/twilio-v2.27.1.pkg
            asset_name: twilio.pkg
            command_name: oclif-dev pack:macos
            exec_name: macos

    steps:
      - uses: actions/checkout@v2
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 2.27.1
      - run: npm cache clear & npm ci
      - run: npm install -g @oclif/dev-cli
        if: ${{ matrix.exec_name == 'macos' }} 
      - run: |
            echo $MACOS_CERTIFICATE | base64 -Dd > certificate.p12
            security create-keychain -p $OSX_KEYCHAIN build.keychain security default-keychain -s build.keychain
            security unlock-keychain -p $OSX_KEYCHAIN build.keychain
            security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
            security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $OSX_KEYCHAIN build.keychain
            brew install makensis
            ${{ matrix.command_name }}
 #       if: ${{ matrix.exec_name != 'macos' }} 
 #     - run: ${{ matrix.command_name }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ steps.previoustag.outputs.tag }}
